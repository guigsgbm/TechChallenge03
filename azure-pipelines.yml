trigger:
  branches:
    include:
      - main

resources:
- repo: self

variables:
 - group: 'TechChallenge03'
 - name: appsettingsPath
   value: '*/*/NewsAPI/appsettings.json'
 - name: imageName
   value: 'NewsAPI'
 - name: dockerfilePath
   value: '*/*/NewsAPI/Dockerfile'

stages:
- stage: Build_Image
  displayName: Build and push stage
  jobs:
  - job: Docker
    displayName: Docker buildAndPush
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: FileTransform@1
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)'
        fileType: 'json'
        targetFiles: $(appsettingsPath)

    - task: Docker@2
      inputs:
        containerRegistry: 'acrtechchallenge03'
        repository: '$(imageName)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)'
        buildContext: '$(System.DefaultWorkingDirectory)'
        tags: |
          $(Build.BuildId)
          latest

  - job: Build
    displayName: .Net Build + SonarCloud
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud -TechChallenge03'
        organization: 'guigsgbm'
        scannerMode: 'MSBuild'
        projectKey: 'guigsgbm_TechChallenge03'

    - task: FileTransform@1
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)'
        fileType: 'json'
        targetFiles: $(appsettingsPath)

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration Release'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
    
    - task: SonarCloudAnalyze@1
      inputs:
        jdkversion: 'JAVA_HOME'

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

    