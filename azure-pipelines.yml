trigger:
  branches:
    include:
      - main

resources:
- repo: self

variables:
 - group: 'TechChallenge03'
 - name: appsettingsPath
   value: '*/*/NewsAPI/appsettings.json'
 - name: imageName
   value: 'newsapi'
 - name: dockerfilePath
   value: '*/*/NewsAPI/Dockerfile'

stages:
- stage: Build_and_Release
  displayName: Build and Release stage
  jobs:
  - job: Docker
    displayName: Docker buildAndPush
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: FileTransform@1
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)'
        fileType: 'json'
        targetFiles: $(appsettingsPath)
    
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          docker build -f ./src/Services/NewsAPI/Dockerfile --target build -t newsapi:$(build.buildid) . 
          docker create -ti --name testcontainer newsapi:$(build.buildid) 
          docker cp testcontainer:/tests/TestsNewsAPI/TestResults/ $(Build.ArtifactStagingDirectory)/testresults 
          docker rm -fv testcontainer

    - task: Docker@2
      inputs:
        containerRegistry: 'acrtechchallenge03'
        repository: '$(imageName)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)'
        buildContext: '$(System.DefaultWorkingDirectory)'
        tags: |
          $(Build.BuildId)
          latest

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '*.trx'
        searchFolder: '$(Build.ArtifactStagingDirectory)/testresults'

  - job: Build
    displayName: .Net Build + SonarCloud
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud -TechChallenge03'
        organization: 'guigsgbm'
        scannerMode: 'MSBuild'
        projectKey: 'guigsgbm_TechChallenge03'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration Release'
      displayName: 'DotNet Build'
        
    - task: SonarCloudAnalyze@1
      inputs:
        jdkversion: 'JAVA_HOME'

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'

  - job: Deploy
    displayName: Deploy to App Service
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'TechChallenge-03'
          appType: 'webAppContainer'
          WebAppName: 'WebAppTechChallenge03'
          DockerNamespace: 'acrtechchallenge03.azurecr.io'
          DockerRepository: '$(imageName)'
          DockerImageTag: 'latest'
    dependsOn: Docker